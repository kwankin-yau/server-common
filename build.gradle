plugins {
    id 'java-library'
    id 'scala'
    id 'maven-publish'
    id 'signing'
}

group 'com.lucendar'
version '3.1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
compileScala.options.encoding = 'UTF-8'

sourceCompatibility = 17
targetCompatibility = 17


repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'dnsjava:dnsjava:3.5.2'
    implementation 'commons-validator:commons-validator:1.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    api 'org.scala-lang:scala-library:2.13.10'
    implementation('com.typesafe.scala-logging:scala-logging_2.13:3.9.4')
    api 'org.springframework:spring-web:6.0.8'
    api 'org.springframework:spring-webmvc:6.0.8'
    implementation('org.springframework:spring-jdbc:6.0.8') // for DuplicateKeyException
    api 'org.springframework:spring-context:6.0.8'
    api ('org.springframework.security:spring-security-core:6.0.3')
    implementation 'io.github.hakky54:sslcontext-kickstart-for-pem:8.3.2'
    implementation 'io.github.hakky54:sslcontext-kickstart-for-netty:8.3.2'


    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'


    implementation('com.google.guava:guava:30.1-jre') // Throwables
    implementation('commons-codec:commons-codec:1.15')

    api ('com.lucendar:lucendar-common:2.0.0')
    api 'io.netty:netty-all:4.1.104.Final'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    options.encoding = 'UTF-8'

    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = 'server-common'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'Server side common library.'
                url = 'https://github.com/kwankin-yau/server-common'

                scm {
                    connection = 'https://github.com/kwankin-yau/server-common.git'
                    developerConnection = 'https://github.com/kwankin-yau/server-common.git'
                    url = 'https://github.com/kwankin-yau/server-common'
                }

                licenses {
                    license {
                        name = 'MIT'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'kky'
                        name = 'kwankin-yau'
                        email = 'alphax@vip.163.com'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

